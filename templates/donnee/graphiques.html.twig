{% extends 'base.html.twig' %}

{% block title %}Graphiques{% endblock %}

{% block body %}
<h1 class="m-3">Graphiques</h1>

<div class="row">
    <div class="col-6"><div class="col-6"><a onclick="history.go(-1)" class="btn btn-success">revenir en arrière</a></div></div>
    <div class="col-6"><p>Graphiques des données du fichier : {{fichier.nomOriginal}} </p></div>
</div>
<hr>
{# 
<div>
    <canvas id="myChart"></canvas>
</div> #}

<div class="row">
    <div class="col-6"><canvas id="myChartHumidite"></canvas></div>
    <div class="col-6"><canvas id="myChartTemperature"></canvas></div>
</div>
<div class="row">
    <div class="col-6"><canvas id="myChartVolume"></canvas></div>
    <div class="col-6"><canvas id="myChartTds"></canvas></div>
</div>
<div class="row">
    <div class="col-6"><canvas id="myChartPh"></canvas></div>
    <div class="col-6"><canvas id="myChartPuissance"></canvas></div>
</div>
<div class="row">
    <div class="col-6"><canvas id="myChartPgf"></canvas></div>
    <div class="col-6"><canvas id="myChartPr"></canvas></div>
</div>
<div class="row">
    <div class="col-6"><canvas id="myChartVfe"></canvas></div>
    <div class="col-6"><canvas id="myChartVnc"></canvas></div>
</div>

 <script>

    let maListeTemps = [];
    let maListeTemperature = [];
    let maListeHumidite = [];

    let maListeVolume = [];
    let maListePuissance = [];
    let maListeTds = [];
    let maListePh = [];

    let maListePgf = [];
    let maListePr = [];
    let maListeVfe = [];
    let maListeVnc = [];


    {% for laData in listeDonnee %}

        maListeTemps.push({{laData.temps}})
        maListeTemperature.push({{laData.t}})
        maListeHumidite.push({{laData.h}})

        maListeVolume.push({{laData.v}})
        maListePuissance.push({{laData.puissance}})
        maListeTds.push({{laData.tds}})
        maListePh.push({{laData.ph}})

        maListePgf.push({{laData.pgf}})
        maListePr.push({{laData.pr}})
        maListeVfe.push({{laData.vfe}})
        maListeVnc.push({{laData.vnc}})

        
    {% endfor %}

    {# [nomChart, nomLabel, nomListeDonnées] #}

    {# let arrayTemperature = ["chartTemperature", "Temperature", maListeTemperature];
    let arrayHumidite = ["chartHumidite", "Humidite", maListeHumidite]; #}

    

    {# const te = document.getElementById('myChart');

    new Chart(te, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [
        {
            label: 'temperature',
            data: maListeTemperature,
            borderWidth: 2,
            yAxisID: 'y1',
            animation: false,
        },
        {
            label: 'humidite',
            data: maListeHumidite,
            borderWidth:1,
            animation: false,
            yAxisID: 'y2',
        },

        {
            label: 'volume',
            data: maListeVolume,
            borderWidth:1,
            animation: false,
            yAxisID: 'y3',
        },

        {
            label: 'puissance',
            data: maListePuissance,
            borderWidth:3,
            animation: false,
            yAxisID: 'y4',
        },
        {
            label: 'TDS',
            data: maListeTds,
            borderWidth:1,
            yAxisID: 'y5',
        },        
        {
            label: 'PH',
            data: maListePh,
            borderWidth:1,
            yAxisID: 'y6',
        },


        ]
        
        },
        options: {
            scales: {
                y1: {
                    beginAtZero: true
                },
                y2:{
                    beginAtZero: true
                },
                y3: {
                    beginAtZero: true
                },
                y4:{
                    beginAtZero: true
                },
                y5: {
                    beginAtZero: true
                },
                y6:{
                    beginAtZero: true
                }
            }
        }
    }); #}

    {# const te = document.getElementById('myChartTemperature');

    new Chart(te, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'temperature',
            data: maListeTemperature,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    }); #}

    const hu = document.getElementById('myChartHumidite');
        new Chart(hu, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'Humidite',
            data: maListeHumidite,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    });

    const te = document.getElementById('myChartTemperature');
        new Chart(te, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'Temperature',
            data: maListeTemperature,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    });    
    
   

    const vo = document.getElementById('myChartVolume');
        new Chart(vo, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'Volume',
            data: maListeVolume,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    });    


    const td = document.getElementById('myChartTds');
        new Chart(td, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'Tds',
            data: maListeTds,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    }); 

    const ph = document.getElementById('myChartPh');
        new Chart(ph, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'pH',
            data: maListePh,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    }); 
    
    const pu = document.getElementById('myChartPuissance');
        new Chart(pu, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'Puissance',
            data: maListePuissance,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    }); 

    const pg = document.getElementById('myChartPgf');
        new Chart(pg, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'Pgf',
            data: maListePgf,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    }); 


    const pr = document.getElementById('myChartPr');
        new Chart(pr, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'Pr',
            data: maListePr,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    }); 


    const vf = document.getElementById('myChartVfe');
        new Chart(vf, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'Vfe',
            data: maListeVfe,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    }); 


    const vn = document.getElementById('myChartVnc');
        new Chart(vn, {
        type: 'line',
        data: {
        labels: maListeTemps,
                    
        datasets: [{
            label: 'Vnc',
            data: maListeVnc,
            borderWidth: 1
        }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        }
    }); 

</script> 


{% endblock %}